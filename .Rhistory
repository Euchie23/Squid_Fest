#Changing metadata colums from dataset into numeric or factor
dataset_with_numerical_values[,c(7,8,9,13,14)] =as.numeric(unlist(dataset_with_numerical_values[,c(7,8,9,13,14)]))
dataset_with_numerical_values[,12]<- cut(as.numeric(dataset_with_numerical_values[,12]), breaks = 4, labels =c(3,4,5,6))
dataset_with_numerical_values[,c(10,11,15)]<- as.character(dataset_with_numerical_values[,c(10,11,15)])
# Determine compound type and set variables and output folder
if (grepl("Metal", colnames(dataset_with_numerical_values)[16])) {
number_range <- 16:25
vars <- c('Metal_H', "Metal_I")
output_folder <- "Trace_metals"
} else {
number_range <- 16:19
vars <- c("Organic_C")
output_folder <- "Organic_compounds"
}
output_folder <- file.path("Squid_Concentration_Analysis/3-Data_Mining/Data_mining_plots/pca_kmeans_clusters/", output_folder)
dir.create(output_folder, recursive = TRUE, showWarnings = FALSE)
# Loop through each tissue and year
tissues <- c("liver", "stomach", "muscle", "inksac")
years <- c('2019', '2020', '2021')
for (tissue in tissues) {
tissue_folder <- file.path(output_folder, tissue)
dir.create(tissue_folder, recursive = TRUE, showWarnings = FALSE)
# Select variables and remove unwanted ones if needed
subsetted_dataset <- dataset_with_numerical_values[, c(number_range, 3, 4, 5, 6)]
if (remove.vars) {
subsetted_dataset <- subsetted_dataset %>% select(!all_of(vars))
}
pollutants <- colnames(subsetted_dataset)[!colnames(subsetted_dataset) %in% c("Year", "Area", "ID_num", "Tissue")]
#For metadata evaluation with kw test
metadata <- dataset_with_numerical_values[,c(7:15)]
metadata_vars <- colnames(metadata)
#subsetted for PCA and K-Means analysis
subsetted_tissue_dataset <- subsetted_dataset %>% filter(Tissue == tissue)
#subsetted for kw test
subsetted_tissue_dataset_kw <- dataset_with_numerical_values %>% filter(Tissue == tissue)
year_colors <- c("2019" = "red", "2020" = "green", "2021" = "blue")
year_vector_all <- as.character(subsetted_tissue_dataset$Year)
# --- PCA and Clustering for All Years ---
pca_data_all_years <- subsetted_tissue_dataset %>%
select(-Year, -Area, -ID_num, -Tissue) %>%
mutate(across(everything(), as.numeric))
pca_all <- PCA(pca_data_all_years, graph = FALSE)
kmeans_all <- kmeans(pca_all$ind$coord[, 1:2], centers = 3)
cluster_df_all <- subsetted_tissue_dataset_kw
cluster_df_all$Cluster <- as.factor(kmeans_all$cluster)
# PCA + KMeans plots
biplot_all <- fviz_pca_biplot(pca_all, col.ind = year_vector_all,
palette = year_colors,
addEllipses = TRUE, label = "var",
col.var = "black", repel = TRUE,
legend.title = "Years",
title = paste("PCA -", tissue, "- All Years"))
kmeans_biplot_all <- fviz_pca_ind(pca_all, geom.ind = "point", pointshape = 21,
fill.ind = cluster_df_all$Cluster,
col.ind = "black", addEllipses = TRUE,
ellipse.type = "norm", label = "none",
palette = "jco",
title = paste("K-means Clusters -", tissue, "- All Years"))
# Boxplots for pollutant variables by cluster
cluster_long_all <- cluster_df_all %>%
select(Cluster, all_of(pollutants)) %>%
pivot_longer(-Cluster, names_to = "variable", values_to = "value")
boxplot_all <- ggplot(cluster_long_all, aes(x = Cluster, y = value, fill = Cluster)) +
geom_boxplot(outlier.shape = NA, alpha = 0.7) +
geom_jitter(shape = 21, width = 0.2, size = 1.5, alpha = 0.6, color = "black") +
facet_wrap(~ variable, scales = "free_y") +
theme_minimal() +
labs(title = paste("Pollutant Distributions by Cluster -", tissue, "- All Years")) +
scale_fill_brewer(palette = "Set1")
# --- Kruskal-Wallis Test (All Years) ---
kw_df_all <- data.frame()
cat("\nMetadata Association Tests -", tissue, "(All Years):\n")
for (var in metadata_vars) {
if (length(unique(cluster_df_all[[var]])) > 1) {
test_result <- kruskal.test(as.formula(paste(var, "~ Cluster")), data = cluster_df_all)
kw_df_all <- rbind(kw_df_all, data.frame(Variable = var, PValue = test_result$p.value))
cat(sprintf("%s: p = %.4f\n", var, test_result$p.value))
}
}
# Add significance stars and sort
kw_df_all <- kw_df_all %>%
mutate(Significance = case_when(
PValue < 0.001 ~ "***",
PValue < 0.01  ~ "**",
PValue < 0.05  ~ "*",
TRUE ~ ""
)) %>%
arrange(PValue) %>%
mutate(Label = sprintf("%s: p = %.4f %s", Variable, PValue, Significance))
# Plot text results
kw_text_plot_all <- ggplot() +
annotate("text", x = 0, y = seq_along(kw_df_all$Label), label = kw_df_all$Label, hjust = 0, size = 4) +
theme_void() +
labs(title = "Kruskal-Wallis P-values") +
theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"))
# Save PNG
png(file.path(tissue_folder, paste0(tissue, "_All_Years_PCA_KMeans_Boxplot.png")), width = 1800, height = 1200)
grid.arrange(biplot_all, kmeans_biplot_all, boxplot_all, kw_text_plot_all, ncol = 2)
dev.off()
# --- Loop through each individual year ---
for (year in years) {
#subsetted for PCA and K-Means analysis
subset_year <- subsetted_tissue_dataset %>% filter(Year == year)
#subsetted for kw test
subset_year_kw <- subsetted_tissue_dataset_kw %>% filter(Year == year)
if (nrow(subset_year) == 0) next
# PCA & KMeans
pca_year_data <- subset_year %>%
select(-Year, -Area, -ID_num, -Tissue) %>%
mutate(across(everything(), as.numeric))
pca_year <- PCA(pca_year_data, graph = FALSE)
kmeans_year <- kmeans(pca_year$ind$coord[, 1:2], centers = 3)
cluster_df <- subset_year_kw
cluster_df$Cluster <- as.factor(kmeans_year$cluster)
pca_biplot <- fviz_pca_biplot(pca_year, col.ind = year_colors[year],
addEllipses = TRUE, label = "var",
col.var = "black", repel = TRUE,
title = paste("PCA -", tissue, year))
kmeans_biplot <- fviz_pca_ind(pca_year, geom.ind = "point", pointshape = 21,
fill.ind = cluster_df$Cluster,
col.ind = "black", addEllipses = TRUE,
ellipse.type = "norm", label = "none",
palette = "jco",
title = paste("K-means Clusters -", tissue, year))
# Boxplots
cluster_long <- cluster_df %>%
select(Cluster, all_of(pollutants)) %>%
pivot_longer(-Cluster, names_to = "variable", values_to = "value")
boxplot_year <- ggplot(cluster_long, aes(x = Cluster, y = value, fill = Cluster)) +
geom_boxplot(outlier.shape = NA, alpha = 0.7) +
geom_jitter(shape = 21, width = 0.2, size = 1.5, alpha = 0.6, color = "black") +
facet_wrap(~ variable, scales = "free_y") +
theme_minimal() +
labs(title = paste("Pollutant Distributions by Cluster -", tissue, year)) +
scale_fill_brewer(palette = "Set1")
# Kruskal-Wallis Test (Per Year)
kw_df <- data.frame()
cat("\nMetadata Association Tests -", tissue, year, ":\n")
for (var in metadata_vars) {
if (length(unique(cluster_df[[var]])) > 1) {
test_result <- kruskal.test(as.formula(paste(var, "~ Cluster")), data = cluster_long)
kw_df <- rbind(kw_df, data.frame(Variable = var, PValue = test_result$p.value))
cat(sprintf("%s: p = %.4f\n", var, test_result$p.value))
}
}
kw_df <- kw_df %>%
mutate(Significance = case_when(
PValue < 0.001 ~ "***",
PValue < 0.01  ~ "**",
PValue < 0.05  ~ "*",
TRUE ~ ""
)) %>%
arrange(PValue) %>%
mutate(Label = sprintf("%s: p = %.4f %s", Variable, PValue, Significance))
kw_text_plot <- ggplot() +
annotate("text", x = 0, y = seq_along(kw_df$Label), label = kw_df$Label, hjust = 0, size = 4) +
theme_void() +
labs(title = "Kruskal-Wallis P-values") +
theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"))
png(file.path(tissue_folder, paste0(tissue, "_", year, "_PCA_KMeans_Boxplot.png")), width = 1800, height = 1200)
grid.arrange(pca_biplot, kmeans_biplot, boxplot_year, kw_text_plot, ncol = 2)
dev.off()
}
}
}
# Run the function (example)
pca_kmeans_cluster_explorer(datasets_for_organic_compounds, remove.vars = TRUE)
debug(pca_kmeans_cluster_explorer)
# Run the function (example)
pca_kmeans_cluster_explorer(datasets_for_organic_compounds, remove.vars = TRUE)
# Full Function: PCA + KMeans + Metadata Kruskal-Wallis with p-values on plots
pca_kmeans_cluster_explorer <- function(data_list, remove.vars = FALSE) {
dataset_with_numerical_values <- as.data.frame(data_list$dataset_with_numerical_values)
#Changing metadata colums from dataset into numeric or factor
dataset_with_numerical_values[,c(7,8,9,13,14)] =as.numeric(unlist(dataset_with_numerical_values[,c(7,8,9,13,14)]))
dataset_with_numerical_values[,12]<- cut(as.numeric(dataset_with_numerical_values[,12]), breaks = 4, labels =c(3,4,5,6))
dataset_with_numerical_values[,c(10,11,15)]<- as.character(dataset_with_numerical_values[,c(10,11,15)])
# Determine compound type and set variables and output folder
if (grepl("Metal", colnames(dataset_with_numerical_values)[16])) {
number_range <- 16:25
vars <- c('Metal_H', "Metal_I")
output_folder <- "Trace_metals"
} else {
number_range <- 16:19
vars <- c("Organic_C")
output_folder <- "Organic_compounds"
}
output_folder <- file.path("Squid_Concentration_Analysis/3-Data_Mining/Data_mining_plots/pca_kmeans_clusters/", output_folder)
dir.create(output_folder, recursive = TRUE, showWarnings = FALSE)
# Loop through each tissue and year
tissues <- c("liver", "stomach", "muscle", "inksac")
years <- c('2019', '2020', '2021')
for (tissue in tissues) {
tissue_folder <- file.path(output_folder, tissue)
dir.create(tissue_folder, recursive = TRUE, showWarnings = FALSE)
# Select variables and remove unwanted ones if needed
subsetted_dataset <- dataset_with_numerical_values[, c(number_range, 3, 4, 5, 6)]
if (remove.vars) {
subsetted_dataset <- subsetted_dataset %>% select(!all_of(vars))
}
pollutants <- colnames(subsetted_dataset)[!colnames(subsetted_dataset) %in% c("Year", "Area", "ID_num", "Tissue")]
#For metadata evaluation with kw test
metadata <- dataset_with_numerical_values[,c(7:15)]
metadata_vars <- colnames(metadata)
#subsetted for PCA and K-Means analysis
subsetted_tissue_dataset <- subsetted_dataset %>% filter(Tissue == tissue)
#subsetted for kw test
subsetted_tissue_dataset_kw <- dataset_with_numerical_values %>% filter(Tissue == tissue)
year_colors <- c("2019" = "red", "2020" = "green", "2021" = "blue")
year_vector_all <- as.character(subsetted_tissue_dataset$Year)
# --- PCA and Clustering for All Years ---
pca_data_all_years <- subsetted_tissue_dataset %>%
select(-Year, -Area, -ID_num, -Tissue) %>%
mutate(across(everything(), as.numeric))
pca_all <- PCA(pca_data_all_years, graph = FALSE)
kmeans_all <- kmeans(pca_all$ind$coord[, 1:2], centers = 3)
cluster_df_all <- subsetted_tissue_dataset_kw
cluster_df_all$Cluster <- as.factor(kmeans_all$cluster)
# PCA + KMeans plots
biplot_all <- fviz_pca_biplot(pca_all, col.ind = year_vector_all,
palette = year_colors,
addEllipses = TRUE, label = "var",
col.var = "black", repel = TRUE,
legend.title = "Years",
title = paste("PCA -", tissue, "- All Years"))
kmeans_biplot_all <- fviz_pca_ind(pca_all, geom.ind = "point", pointshape = 21,
fill.ind = cluster_df_all$Cluster,
col.ind = "black", addEllipses = TRUE,
ellipse.type = "norm", label = "none",
palette = "jco",
title = paste("K-means Clusters -", tissue, "- All Years"))
# Boxplots for pollutant variables by cluster
cluster_long_all <- cluster_df_all %>%
select(Cluster, all_of(pollutants)) %>%
pivot_longer(-Cluster, names_to = "variable", values_to = "value")
boxplot_all <- ggplot(cluster_long_all, aes(x = Cluster, y = value, fill = Cluster)) +
geom_boxplot(outlier.shape = NA, alpha = 0.7) +
geom_jitter(shape = 21, width = 0.2, size = 1.5, alpha = 0.6, color = "black") +
facet_wrap(~ variable, scales = "free_y") +
theme_minimal() +
labs(title = paste("Pollutant Distributions by Cluster -", tissue, "- All Years")) +
scale_fill_brewer(palette = "Set1")
# --- Kruskal-Wallis Test (All Years) ---
kw_df_all <- data.frame()
cat("\nMetadata Association Tests -", tissue, "(All Years):\n")
for (var in metadata_vars) {
if (length(unique(cluster_df_all[[var]])) > 1) {
test_result <- kruskal.test(as.formula(paste(var, "~ Cluster")), data = cluster_df_all)
kw_df_all <- rbind(kw_df_all, data.frame(Variable = var, PValue = test_result$p.value))
cat(sprintf("%s: p = %.4f\n", var, test_result$p.value))
}
}
# Add significance stars and sort
kw_df_all <- kw_df_all %>%
mutate(Significance = case_when(
PValue < 0.001 ~ "***",
PValue < 0.01  ~ "**",
PValue < 0.05  ~ "*",
TRUE ~ ""
)) %>%
arrange(PValue) %>%
mutate(Label = sprintf("%s: p = %.4f %s", Variable, PValue, Significance))
# Plot text results
kw_text_plot_all <- ggplot() +
annotate("text", x = 0, y = seq_along(kw_df_all$Label), label = kw_df_all$Label, hjust = 0, size = 4) +
theme_void() +
labs(title = "Kruskal-Wallis P-values") +
theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"))
# Save PNG
png(file.path(tissue_folder, paste0(tissue, "_All_Years_PCA_KMeans_Boxplot.png")), width = 1800, height = 1200)
grid.arrange(biplot_all, kmeans_biplot_all, boxplot_all, kw_text_plot_all, ncol = 2)
dev.off()
# --- Loop through each individual year ---
for (year in years) {
#subsetted for PCA and K-Means analysis
subset_year <- subsetted_tissue_dataset %>% filter(Year == year)
#subsetted for kw test
subset_year_kw <- subsetted_tissue_dataset_kw %>% filter(Year == year)
if (nrow(subset_year) == 0) next
# PCA & KMeans
pca_year_data <- subset_year %>%
select(-Year, -Area, -ID_num, -Tissue) %>%
mutate(across(everything(), as.numeric))
pca_year <- PCA(pca_year_data, graph = FALSE)
kmeans_year <- kmeans(pca_year$ind$coord[, 1:2], centers = 3)
cluster_df <- subset_year_kw
cluster_df$Cluster <- as.factor(kmeans_year$cluster)
pca_biplot <- fviz_pca_biplot(pca_year, col.ind = year_colors[year],
addEllipses = TRUE, label = "var",
col.var = "black", repel = TRUE,
title = paste("PCA -", tissue, year))
kmeans_biplot <- fviz_pca_ind(pca_year, geom.ind = "point", pointshape = 21,
fill.ind = cluster_df$Cluster,
col.ind = "black", addEllipses = TRUE,
ellipse.type = "norm", label = "none",
palette = "jco",
title = paste("K-means Clusters -", tissue, year))
# Boxplots
cluster_long <- cluster_df %>%
select(Cluster, all_of(pollutants)) %>%
pivot_longer(-Cluster, names_to = "variable", values_to = "value")
boxplot_year <- ggplot(cluster_long, aes(x = Cluster, y = value, fill = Cluster)) +
geom_boxplot(outlier.shape = NA, alpha = 0.7) +
geom_jitter(shape = 21, width = 0.2, size = 1.5, alpha = 0.6, color = "black") +
facet_wrap(~ variable, scales = "free_y") +
theme_minimal() +
labs(title = paste("Pollutant Distributions by Cluster -", tissue, year)) +
scale_fill_brewer(palette = "Set1")
# Kruskal-Wallis Test (Per Year)
kw_df <- data.frame()
cat("\nMetadata Association Tests -", tissue, year, ":\n")
for (var in metadata_vars) {
if (length(unique(cluster_df[[var]])) > 1) {
test_result <- kruskal.test(as.formula(paste(var, "~ Cluster")), data = cluster_df)
kw_df <- rbind(kw_df, data.frame(Variable = var, PValue = test_result$p.value))
cat(sprintf("%s: p = %.4f\n", var, test_result$p.value))
}
}
kw_df <- kw_df %>%
mutate(Significance = case_when(
PValue < 0.001 ~ "***",
PValue < 0.01  ~ "**",
PValue < 0.05  ~ "*",
TRUE ~ ""
)) %>%
arrange(PValue) %>%
mutate(Label = sprintf("%s: p = %.4f %s", Variable, PValue, Significance))
kw_text_plot <- ggplot() +
annotate("text", x = 0, y = seq_along(kw_df$Label), label = kw_df$Label, hjust = 0, size = 4) +
theme_void() +
labs(title = "Kruskal-Wallis P-values") +
theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"))
png(file.path(tissue_folder, paste0(tissue, "_", year, "_PCA_KMeans_Boxplot.png")), width = 1800, height = 1200)
grid.arrange(pca_biplot, kmeans_biplot, boxplot_year, kw_text_plot, ncol = 2)
dev.off()
}
}
}
# Run the function (example)
pca_kmeans_cluster_explorer(datasets_for_organic_compounds, remove.vars = TRUE)
# Full Function: PCA + KMeans + Metadata Kruskal-Wallis with p-values on plots
pca_kmeans_cluster_explorer <- function(data_list, remove.vars = FALSE) {
dataset_with_numerical_values <- as.data.frame(data_list$dataset_with_numerical_values)
#Changing metadata colums from dataset into numeric or factor
dataset_with_numerical_values[,c(7,8,9,13,14)] =as.numeric(unlist(dataset_with_numerical_values[,c(7,8,9,13,14)]))
dataset_with_numerical_values[,12]<- cut(as.numeric(dataset_with_numerical_values[,12]), breaks = 4, labels =c(3,4,5,6))
dataset_with_numerical_values[,c(10,11,15)]<- as.character(dataset_with_numerical_values[,c(10,11,15)])
# Determine compound type and set variables and output folder
if (grepl("Metal", colnames(dataset_with_numerical_values)[16])) {
number_range <- 16:25
vars <- c('Metal_H', "Metal_I")
output_folder <- "Trace_metals"
} else {
number_range <- 16:19
vars <- c("Organic_C")
output_folder <- "Organic_compounds"
}
output_folder <- file.path("Squid_Concentration_Analysis/3-Data_Mining/Data_mining_plots/pca_kmeans_clusters/", output_folder)
dir.create(output_folder, recursive = TRUE, showWarnings = FALSE)
# Loop through each tissue and year
tissues <- c("liver", "stomach", "muscle", "inksac")
years <- c('2019', '2020', '2021')
for (tissue in tissues) {
tissue_folder <- file.path(output_folder, tissue)
dir.create(tissue_folder, recursive = TRUE, showWarnings = FALSE)
# Select variables and remove unwanted ones if needed
subsetted_dataset <- dataset_with_numerical_values[, c(number_range, 3, 4, 5, 6)]
if (remove.vars) {
subsetted_dataset <- subsetted_dataset %>% select(!all_of(vars))
}
pollutants <- colnames(subsetted_dataset)[!colnames(subsetted_dataset) %in% c("Year", "Area", "ID_num", "Tissue")]
#For metadata evaluation with kw test
metadata <- dataset_with_numerical_values[,c(7:15)]
metadata_vars <- colnames(metadata)
#subsetted for PCA and K-Means analysis
subsetted_tissue_dataset <- subsetted_dataset %>% filter(Tissue == tissue)
#subsetted for kw test
subsetted_tissue_dataset_kw <- dataset_with_numerical_values %>% filter(Tissue == tissue)
year_colors <- c("2019" = "red", "2020" = "green", "2021" = "blue")
year_vector_all <- as.character(subsetted_tissue_dataset$Year)
# --- PCA and Clustering for All Years ---
pca_data_all_years <- subsetted_tissue_dataset %>%
select(-Year, -Area, -ID_num, -Tissue) %>%
mutate(across(everything(), as.numeric))
pca_all <- PCA(pca_data_all_years, graph = FALSE)
kmeans_all <- kmeans(pca_all$ind$coord[, 1:2], centers = 3)
cluster_df_all <- subsetted_tissue_dataset_kw
cluster_df_all$Cluster <- as.factor(kmeans_all$cluster)
# PCA + KMeans plots
biplot_all <- fviz_pca_biplot(pca_all, col.ind = year_vector_all,
palette = year_colors,
addEllipses = TRUE, label = "var",
col.var = "black", repel = TRUE,
legend.title = "Years",
title = paste("PCA -", tissue, "- All Years"))
kmeans_biplot_all <- fviz_pca_ind(pca_all, geom.ind = "point", pointshape = 21,
fill.ind = cluster_df_all$Cluster,
col.ind = "black", addEllipses = TRUE,
ellipse.type = "norm", label = "none",
palette = "jco",
title = paste("K-means Clusters -", tissue, "- All Years"))
# Boxplots for pollutant variables by cluster
cluster_long_all <- cluster_df_all %>%
select(Cluster, all_of(pollutants)) %>%
pivot_longer(-Cluster, names_to = "variable", values_to = "value")
boxplot_all <- ggplot(cluster_long_all, aes(x = Cluster, y = value, fill = Cluster)) +
geom_boxplot(outlier.shape = NA, alpha = 0.7) +
geom_jitter(shape = 21, width = 0.2, size = 1.5, alpha = 0.6, color = "black") +
facet_wrap(~ variable, scales = "free_y") +
theme_minimal() +
labs(title = paste("Pollutant Distributions by Cluster -", tissue, "- All Years")) +
scale_fill_brewer(palette = "Set1")
# --- Kruskal-Wallis Test (All Years) ---
kw_df_all <- data.frame()
cat("\nMetadata Association Tests -", tissue, "(All Years):\n")
for (var in metadata_vars) {
if (length(unique(cluster_df_all[[var]])) > 1) {
test_result <- kruskal.test(as.formula(paste(var, "~ Cluster")), data = cluster_df_all)
kw_df_all <- rbind(kw_df_all, data.frame(Variable = var, PValue = test_result$p.value))
cat(sprintf("%s: p = %.4f\n", var, test_result$p.value))
}
}
# Add significance stars and sort
kw_df_all <- kw_df_all %>%
mutate(Significance = case_when(
PValue < 0.001 ~ "***",
PValue < 0.01  ~ "**",
PValue < 0.05  ~ "*",
TRUE ~ ""
)) %>%
arrange(PValue) %>%
mutate(Label = sprintf("%s: p = %.4f %s", Variable, PValue, Significance))
# Plot text results
kw_text_plot_all <- ggplot() +
annotate("text", x = 0, y = seq_along(kw_df_all$Label)*0.5, label = kw_df_all$Label, hjust = 0, size = 6) +
theme_void() +
labs(title = "Kruskal-Wallis P-values") +
theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"))
# Save PNG
png(file.path(tissue_folder, paste0(tissue, "_All_Years_PCA_KMeans_Boxplot.png")), width = 1800, height = 1200)
grid.arrange(biplot_all, kmeans_biplot_all, boxplot_all, kw_text_plot_all, ncol = 2)
dev.off()
# --- Loop through each individual year ---
for (year in years) {
#subsetted for PCA and K-Means analysis
subset_year <- subsetted_tissue_dataset %>% filter(Year == year)
#subsetted for kw test
subset_year_kw <- subsetted_tissue_dataset_kw %>% filter(Year == year)
if (nrow(subset_year) == 0) next
# PCA & KMeans
pca_year_data <- subset_year %>%
select(-Year, -Area, -ID_num, -Tissue) %>%
mutate(across(everything(), as.numeric))
pca_year <- PCA(pca_year_data, graph = FALSE)
kmeans_year <- kmeans(pca_year$ind$coord[, 1:2], centers = 3)
cluster_df <- subset_year_kw
cluster_df$Cluster <- as.factor(kmeans_year$cluster)
pca_biplot <- fviz_pca_biplot(pca_year, col.ind = year_colors[year],
addEllipses = TRUE, label = "var",
col.var = "black", repel = TRUE,
title = paste("PCA -", tissue, year))
kmeans_biplot <- fviz_pca_ind(pca_year, geom.ind = "point", pointshape = 21,
fill.ind = cluster_df$Cluster,
col.ind = "black", addEllipses = TRUE,
ellipse.type = "norm", label = "none",
palette = "jco",
title = paste("K-means Clusters -", tissue, year))
# Boxplots
cluster_long <- cluster_df %>%
select(Cluster, all_of(pollutants)) %>%
pivot_longer(-Cluster, names_to = "variable", values_to = "value")
boxplot_year <- ggplot(cluster_long, aes(x = Cluster, y = value, fill = Cluster)) +
geom_boxplot(outlier.shape = NA, alpha = 0.7) +
geom_jitter(shape = 21, width = 0.2, size = 1.5, alpha = 0.6, color = "black") +
facet_wrap(~ variable, scales = "free_y") +
theme_minimal() +
labs(title = paste("Pollutant Distributions by Cluster -", tissue, year)) +
scale_fill_brewer(palette = "Set1")
# Kruskal-Wallis Test (Per Year)
kw_df <- data.frame()
cat("\nMetadata Association Tests -", tissue, year, ":\n")
for (var in metadata_vars) {
if (length(unique(cluster_df[[var]])) > 1) {
test_result <- kruskal.test(as.formula(paste(var, "~ Cluster")), data = cluster_df)
kw_df <- rbind(kw_df, data.frame(Variable = var, PValue = test_result$p.value))
cat(sprintf("%s: p = %.4f\n", var, test_result$p.value))
}
}
kw_df <- kw_df %>%
mutate(Significance = case_when(
PValue < 0.001 ~ "***",
PValue < 0.01  ~ "**",
PValue < 0.05  ~ "*",
TRUE ~ ""
)) %>%
arrange(PValue) %>%
mutate(Label = sprintf("%s: p = %.4f %s", Variable, PValue, Significance))
kw_text_plot <- ggplot() +
annotate("text", x = 0, y = seq_along(kw_df$Label)*0.5, label = kw_df$Label, hjust = 0, size = 6) +
theme_void() +
labs(title = "Kruskal-Wallis P-values") +
theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"))
png(file.path(tissue_folder, paste0(tissue, "_", year, "_PCA_KMeans_Boxplot.png")), width = 1800, height = 1200)
grid.arrange(pca_biplot, kmeans_biplot, boxplot_year, kw_text_plot, ncol = 2)
dev.off()
}
}
}
# Run the function (example)
pca_kmeans_cluster_explorer(datasets_for_organic_compounds, remove.vars = TRUE)
# Run the function (example)
pca_kmeans_cluster_explorer(datasets_for_trace_metals, remove.vars = TRUE)
